name: CI
on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.10'
  LIBRARY_NAME: 'lamberthub'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v7

  doc-style:
    name: "Doc style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@v7
        with:
          files: "README.md"
          token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: "Tests"
    runs-on: ${{ matrix.os }}
    needs: [code-style, doc-style]
    strategy:
      matrix:
        os: [ubuntu-latest]
        cfg:
          - {python-version: '3.10', extra-args: '--cov=lamberthub --cov-report=term --cov-report=html:.cov/html'}
          - {python-version: '3.11', extra-args: ''}
          - {python-version: '3.12', extra-args: ''}
      fail-fast: false
    steps:
      - name: "Run tests"
        uses: ansys/actions/tests-pytest@v7
        with:
          pytest-extra-args: ${{ matrix.cfg.extra-args }}
        env:
          # Do not run Numba when measuring code coverage to get accurate values
          NUMBA_DISABLE_JIT: 1

      - name: "Upload coverage"
        uses: codecov/codecov-action@v4
        if: matrix.cfg.python-version == env.MAIN_PYTHON_VERSION && matrix.os == 'ubuntu-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: ansys/actions/build-library@v7
        with:
          library-name: ${{ env.LIBRARY_NAME }}

  release:
    name: "Release"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build-library
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:

      - name: "Release to the public PyPI repository"
        uses: ansys/actions/release-pypi-public@v7
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          use-trusted-publisher: true

      - name: "Download distribution artifacts"
        uses: actions/download-artifact@v4

      - name: "Release to GitHub"
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/${{ env.LIBRARY_NAME }}-artifacts/*.whl
            dist/${{ env.LIBRARY_NAME }}-artifacts/*.tar.gz
